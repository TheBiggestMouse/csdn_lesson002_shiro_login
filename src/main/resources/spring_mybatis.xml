<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
        xmlns:context="http://www.springframework.org/schema/context" 
        xmlns:aop="http://www.springframework.org/schema/aop" 
        xmlns:tx="http://www.springframework.org/schema/tx" 
        xsi:schemaLocation="http://www.springframework.org/schema/beans   
        http://www.springframework.org/schema/beans/spring-beans-4.1.xsd  
        http://www.springframework.org/schema/context  
        http://www.springframework.org/schema/context/spring-context-4.1.xsd  
        http://www.springframework.org/schema/tx  
        http://www.springframework.org/schema/tx/spring-tx-4.1.xsd  
        http://www.springframework.org/schema/aop   
        http://www.springframework.org/schema/aop/spring-aop-4.1.xsd">
        <!-- 扫描模型层所在包路径 -->
        <context:component-scan base-package="com.lgf.maven_ssm.*.service.impl"></context:component-scan>

        <!-- 声明数据源 -->
        <!-- mySQL数据源Bean -->
        <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource" > 
            <property name="driverClassName"> 
            <value>com.mysql.jdbc.Driver</value> 
            </property> 
            <property name="url"> 
            <value>jdbc:mysql://localhost:3306/csdn?useUnicode=true&amp;characterEncoding=utf-8</value> 
            </property> 
            <property name="username"> 
            <value>root</value> 
            </property> 
            <property name="password"> 
            <value>123456</value> 
            </property> 
        </bean> 
        <!-- 把数据源注入给SqlSessionFactory 相当于Mybatis里的连库信息-->
        <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
            <property name="dataSource" ref="dataSource" />
            <!-- mapper和resultmap配置路径       相当于声明SQL映射文件--> 
            <property name="mapperLocations"> 
              <list> 
                <value>classpath:sqlMap/*Mapper.xml</value> 
              </list> 
            </property>        
        </bean>

        <!-- 设置扫描根路径也就是你的mybatis的mapper接口所在包路径；--> 
        <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer"> 
            <property name="basePackage" value="com.lgf.maven_ssm.*.mapper"/> 
        </bean> 
        <!--启动spring事务注解功能-->
        <tx:annotation-driven transaction-manager="transactionManager" />
        
        <!-- 配置shiro框架的过滤器工厂bean -->
		<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
			<property name="securityManager" ref="securityManager" />
			<!-- 登录项目首次访问的地址 -->
			<property name="loginUrl" value="/index.jsp" />
			<property name="successUrl" value="/successUrl.jsp" />
			<property name="unauthorizedUrl" value="/unauthorizedUrl.jsp" />
			<!-- 指定URL拦截策略 ,静态资源放行，登录放行，其他的需要认证也就是登录-->
			<property name="filterChainDefinitions">
				<value>
					/index.jsp=anon
					/jsp/error.jsp=anon
					/login/loginPage.action=anon
					/**=authc
				</value>
			</property>
		</bean>
		<!-- 配置安全管理器 -->
		<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
			<property name="realm" ref="MyRealm" />
			<!-- 注入缓存管理器 -->
			<property name="cacheManager" ref="cacheManager" />
		</bean>
		<!-- 注册自定义realm -->
		<bean id="MyRealm"
			class="com.lgf.maven_ssm.shiro.MyRealm" />
		<!-- 注册缓存管理器 -->
		<bean id="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
			<!-- 注入ehcache配置文件 -->
			<property name="cacheManagerConfigFile" value="classpath:/ehcache_shiro.xml" />
		</bean>
		<!-- 开启shiro注解加到springmvc.xml中去了，因为不加那里会导致注解失效 -->

    </beans>
